// Generated by CoffeeScript 1.6.3
(function() {
  var Application, app, express, http, mongoose, path;

  express = require('express');

  http = require('http');

  path = require('path');

  mongoose = require('mongoose');

  app = express();

  app.set('port', process.env.PORT || 3000);

  app.set('views', __dirname + '/../views');

  app.set('view engine', 'jade');

  app.use(express.favicon());

  app.use(express.logger('dev'));

  app.use(express.bodyParser());

  app.use(express.methodOverride());

  app.use(app.router);

  app.use(express["static"](path.join(__dirname, '/../public')));

  if ('development' === app.get('env')) {
    app.use(express.errorHandler());
  }

  mongoose.connect('mongodb:#localhost/omegathreestudios');

  Application = mongoose.model('Application', {
    name: String,
    bio: String,
    skills: Array,
    experience: Number,
    why: String
  });

  app.get('/', function(req, res) {
    return res.render('index');
  });

  app.get('/applicant', function(req, res) {
    var data;
    console.log("reqbody", req.query.buttonId);
    data = req.query;
    return Application.findByIdAndRemove(data.buttonId, function(err, id) {
      console.log("id", id);
      if (id) {
        return console.log('success');
      } else {
        return console.log('err', err);
      }
    });
  });

  app.get('/applicants', function(req, res) {
    return Application.find({}, function(err, data) {
      return res.render('applicants', {
        'applicantPool': data
      });
    });
  });

  app.post('/applicant', function(req, res) {
    var newApp;
    newApp = new Application({
      name: req.body.name,
      bio: req.body.bio,
      skills: req.body.skills.split(','),
      experience: req.body.years,
      why: req.body.why
    });
    return newApp.save(function(err) {
      if (err) {
        return res.send(err);
      } else {
        return Application.find({}, function(err, appData) {
          return res.send({
            success: 'Success!',
            applicants: appData
          });
        });
      }
    });
  });

  app.get('/:userid', function(req, res) {
    return Application.findById(req.param('userid'), function(err, data) {
      console.log('req', req.param('userid'));
      if (err) {
        return console.log('error', err);
      } else {
        console.log('app', data);
        return res.render('userid', {
          userid: req.param('_id'),
          'applicantPool': data
        });
      }
    });
  });

  http.createServer(app).listen(app.get('port'), function() {
    return console.log('Express server listening on port ' + app.get('port'));
  });

}).call(this);
